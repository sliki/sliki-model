syntax = "proto3";

option java_package = "wiki.sliki.model";

message UserId {
  bytes binary_uuid = 1;
}

// note that PB's enum scoping rules require values to be globally unique,
// hence seemingly redundant prefixes.
enum UserType {
  USER_PERSONAL   = 0;
  USER_ORG_BASED  = 1;
}

// note that PB's enum scoping rules require values to be globally unique,
// hence seemingly redundant prefixes.
enum UserStatus {
  USER_ACTIVE      = 0;
  USER_UNVERIFIED  = 1;
  USER_SUSPENDED   = 2;
}

message User {
  UserId user_id                = 1;
  UserType user_type            = 2;
  UserStatus status             = 3;
  int64 created_datetime_ms     = 4;
  int64 modified_datetime_ms    = 5;
  string given_name             = 6;
  string family_name            = 7;
  string display_name           = 8;
  string description            = 9;
  PersonaId default_persona_id  = 10;
}

message PersonaId {
  bytes binary_uuid = 1;
}

// note that PB's enum scoping rules require values to be globally unique,
// hence seemingly redundant prefixes.
enum PersonaType {
  PERSONA_REGULAR = 0;
}

// note that PB's enum scoping rules require values to be globally unique,
// hence seemingly redundant prefixes.
enum PersonaStatus {
  PERSONA_ACTIVE = 0;
}

message Persona {
  PersonaId persona_id        = 1;
  PersonaType persona_type    = 2;
  PersonaStatus status        = 3;
  UserId user_id              = 4;
  int64 created_datetime_ms   = 5;
  int64 modified_datetime_ms  = 6;
  string display_name         = 7;
  string description          = 8;
}

message OrgId {
  bytes binary_uuid = 1;
}

// note that PB's enum scoping rules require values to be globally unique,
// hence seemingly redundant prefixes.
enum OrgType {
  ORG_NON_PROFIT_OTHER        = 0;
  ORG_NON_PROFIT_EDUCATIONAL  = 1;
  ORG_NON_PROFIT_RELIGIOUS    = 2;
  ORG_NON_PROFIT_GOVERNMENT   = 3;
  ORG_FOR_PROFIT_OTHER        = 4;
  ORG_FOR_PROFIT_SMALL        = 5;
  ORG_FOR_PROFIT_LARGE        = 6;
}

// note that PB's enum scoping rules require values to be globally unique,
// hence seemingly redundant prefixes.
enum OrgStatus {
  ORG_ACTIVE = 0;
}


message Org {
  OrgId org_id                = 1;
  OrgType org_type            = 2;
  OrgStatus status            = 3;
  int64 created_datetime_ms   = 4;
  int64 modified_datetime_ms  = 5;
  string display_name         = 6;
  string description          = 7;
}

message GroupId {
  bytes binary_uuid = 1;
}

enum GroupType {
  GROUP_PERSONAL  = 0;
  GROUP_ORG       = 1;
}

enum GroupVisibility {
  GROUP_PUBLIC   = 0;
  GROUP_PRIVATE  = 1;
}

enum GroupStatus {
  GROUP_ACTIVE  = 0;
}

message Group {
  GroupId group_id            = 1;
  GroupType group_type        = 2;
  GroupVisibility visibility  = 3;              
  GroupStatus status          = 4;
  int64 created_datetime_ms   = 5;
  int64 modified_datetime_ms  = 6;
  string display_name         = 7;
  string description          = 8;
}

message MessageId {
  bytes binary_uuid = 1;
}

enum MessageType {
  MSG_SIMPLE  = 0;
  MSG_THREAD  = 1;
}

enum MessageStatus {
  MSG_PUBLISHED = 0;
}

enum MessageVisibility {
  MSG_PUBLIC  = 0;
  MSG_ORG_PUBLIC = 1;
  MSG_SHARED = 2;
  MSG_PRIVATE = 3;
}

message Message {
  MessageId message_id          = 1;
  MessageType message_type      = 2;
  MessageStatus status          = 3;
  MessageVisibility visibility  = 4;
  int64 created_datetime_ms     = 5;
  int64 modified_datetime_ms    = 6;
  PersonaId created_persona_id  = 7;
  OrgId create_org_id           = 8;
  string message_body           = 9;
}

message MessageRef {
  MessageId ref_message_id       = 1;
  MessageId original_message_id  = 2;
}

message DocId {
  bytes binary_uuid = 1;
}

enum DocType {
  DOC_SIMPLE = 0;
}

enum DocStatus {
  DOC_ACTIVE = 0;
}

enum DocVisibility {
  DOC_PUBLIC = 0;
  DOC_ORG_PUBLIC = 1;
  DOC_SHARED = 2;
  DOC_PRIVATE = 3;
}

message Doc {
  DocId doc_id              = 1;
  DocType doc_type          = 2;
  DocStatus status          = 3;
  DocVisibility visibility  = 4;
}



message Auth {
  message PersonaRef {
    string ext_name             = 1;
    PersonaId persona_id        = 2;
    int64 created_datetime_ms   = 3;
    int64 modified_datetime_ms  = 4;
    // note that login does not count as a modification
    int64 login_datetime_ms     = 5;
  }
  UserId user_id                = 1;
  repeated PersonaRef personas  = 2;
  int64 created_datetime_ms     = 3;
  int64 modified_datetime_ms    = 4;
  // note that login does not count as a modification
  int64 login_datetime_ms       = 6;
  bytes login_ip_address        = 7;
}

message AuthRec {
  string ext_id   = 1;
  bytes pw_hash   = 2;
  bytes pw_salt   = 3;
  Auth auth       = 4; 
}

message SessionId {
  // 32-byte session_id
  bytes binary_uuid  = 1;
}

message Session {
  SessionId session_id       = 1;
  PersonaId persona_id       = 2;
  int64 start_datetime_ms    = 3;
  int64 expire_datetime_ms   = 4;
  
}